{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\TwitchPlus\\\\webFront\\\\twitchplus\\\\src\\\\components\\\\Home.js\";\nimport React from 'react';\nimport { Button, Card, List, message, Tabs, Tooltip } from 'antd';\nimport { StarOutlined, StarFilled } from '@ant-design/icons';\nimport { addFavoriteItem, deleteFavoriteItem } from '../utils';\nconst {\n  TabPane\n} = Tabs;\nconst tabKeys = {\n  Streams: 'stream',\n  Videos: 'videos',\n  Clips: 'clips'\n};\n\nconst processUrl = url => url.replace('%{height}', '252').replace('%{width}', '480').replace('{height}', '252').replace('{width}', '480');\n\nconst renderCardTitle = (item, loggedIn, favs, favOnChange) => {\n  const title = `${item.broadcaster_name} - ${item.title}`;\n  const isFav = favs.find(fav => fav.id === item.id);\n\n  const favOnClick = () => {\n    if (isFav) {\n      deleteFavoriteItem(item).then(() => {\n        favOnChange();\n      }).catch(err => {\n        message.error(err.message);\n      });\n      return;\n    }\n\n    addFavoriteItem(item).then(() => {\n      favOnChange();\n    }).catch(err => {\n      message.error(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loggedIn && /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: isFav ? \"Remove from favorite list\" : \"Add to favorite list\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        shape: \"circle\",\n        icon: isFav ? /*#__PURE__*/_jsxDEV(StarFilled, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 48\n        }, this) : /*#__PURE__*/_jsxDEV(StarOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 65\n        }, this),\n        onClick: favOnClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        width: 450\n      },\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: title,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nconst renderCardGrid = (data, loggedIn, favs, favOnChange) => {\n  return /*#__PURE__*/_jsxDEV(List, {\n    grid: {\n      xs: 1,\n      sm: 2,\n      md: 4,\n      lg: 4,\n      xl: 6\n    },\n    dataSource: data,\n    renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n      style: {\n        marginRight: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: renderCardTitle(item, loggedIn, favs, favOnChange),\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: item.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"Placeholder\",\n            src: processUrl(item.thumbnail_url)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\nconst Home = ({\n  resources,\n  loggedIn,\n  favoriteItems,\n  favoriteOnChange\n}) => {\n  const {\n    VIDEO,\n    STREAM,\n    CLIP\n  } = resources;\n  const {\n    VIDEO: favVideos,\n    STREAM: favStreams,\n    CLIP: favClips\n  } = favoriteItems;\n  return /*#__PURE__*/_jsxDEV(Tabs, {\n    defaultActiveKey: tabKeys.Streams,\n    children: [/*#__PURE__*/_jsxDEV(TabPane, {\n      tab: \"Streams\",\n      style: {\n        height: '680px',\n        overflow: 'auto'\n      },\n      forceRender: true,\n      children: renderCardGrid(STREAM, loggedIn, favStreams, favoriteOnChange)\n    }, tabKeys.Streams, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n      tab: \"Videos\",\n      style: {\n        height: '680px',\n        overflow: 'auto'\n      },\n      forceRender: true,\n      children: renderCardGrid(VIDEO, loggedIn, favVideos, favoriteOnChange)\n    }, tabKeys.Videos, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n      tab: \"Clips\",\n      style: {\n        height: '680px',\n        overflow: 'auto'\n      },\n      forceRender: true,\n      children: renderCardGrid(CLIP, loggedIn, favClips, favoriteOnChange)\n    }, tabKeys.Clips, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/projects/TwitchPlus/webFront/twitchplus/src/components/Home.js"],"names":["React","Button","Card","List","message","Tabs","Tooltip","StarOutlined","StarFilled","addFavoriteItem","deleteFavoriteItem","TabPane","tabKeys","Streams","Videos","Clips","processUrl","url","replace","renderCardTitle","item","loggedIn","favs","favOnChange","title","broadcaster_name","isFav","find","fav","id","favOnClick","then","catch","err","error","overflow","textOverflow","width","renderCardGrid","data","xs","sm","md","lg","xl","marginRight","thumbnail_url","Home","resources","favoriteItems","favoriteOnChange","VIDEO","STREAM","CLIP","favVideos","favStreams","favClips","height"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button, Card, List, message, Tabs, Tooltip } from 'antd';\r\nimport { StarOutlined, StarFilled } from '@ant-design/icons';\r\nimport { addFavoriteItem, deleteFavoriteItem } from '../utils';\r\n \r\nconst { TabPane } = Tabs;\r\nconst tabKeys = {\r\n  Streams: 'stream',\r\n  Videos: 'videos',\r\n  Clips: 'clips',\r\n}\r\n \r\nconst processUrl = (url) => url\r\n  .replace('%{height}', '252')\r\n  .replace('%{width}', '480')\r\n  .replace('{height}', '252')\r\n  .replace('{width}', '480');\r\n \r\nconst renderCardTitle = (item, loggedIn, favs, favOnChange) => {\r\n  const title = `${item.broadcaster_name} - ${item.title}`;\r\n \r\n  const isFav = favs.find((fav) => fav.id === item.id);\r\n \r\n  const favOnClick = () => {\r\n    if (isFav) {\r\n      deleteFavoriteItem(item).then(() => {\r\n        favOnChange();\r\n      }).catch(err => {\r\n        message.error(err.message)\r\n      })\r\n \r\n      return;\r\n    }\r\n \r\n    addFavoriteItem(item).then(() => {\r\n      favOnChange();\r\n    }).catch(err => {\r\n      message.error(err.message)\r\n    })\r\n  }\r\n \r\n  return (\r\n    <>\r\n      {\r\n        loggedIn &&\r\n        <Tooltip title={isFav ? \"Remove from favorite list\" : \"Add to favorite list\"}>\r\n          <Button shape=\"circle\" icon={isFav ? <StarFilled /> : <StarOutlined />} onClick={favOnClick} />\r\n        </Tooltip>\r\n      }\r\n      <div style={{ overflow: 'hidden', textOverflow: 'ellipsis', width: 450 }}>\r\n        <Tooltip title={title}>\r\n          <span>{title}</span>\r\n        </Tooltip>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n \r\nconst renderCardGrid = (data, loggedIn, favs, favOnChange) => {\r\n  return (\r\n    <List\r\n      grid={{\r\n        xs: 1,\r\n        sm: 2,\r\n        md: 4,\r\n        lg: 4,\r\n        xl: 6,\r\n      }}\r\n      dataSource={data}\r\n      renderItem={item => (\r\n        <List.Item style={{ marginRight: '20px' }}>\r\n          <Card\r\n            title={renderCardTitle(item, loggedIn, favs, favOnChange)}\r\n          >\r\n            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <img \r\n                alt=\"Placeholder\"\r\n                src={processUrl(item.thumbnail_url)}\r\n              />\r\n            </a>\r\n          </Card>\r\n        </List.Item>\r\n      )}\r\n    />\r\n  )\r\n}\r\n \r\nconst Home = ({ resources, loggedIn, favoriteItems, favoriteOnChange }) => {\r\n  const { VIDEO, STREAM, CLIP } = resources;\r\n  const { VIDEO: favVideos, STREAM: favStreams, CLIP: favClips} = favoriteItems;\r\n \r\n  return (\r\n    <Tabs \r\n      defaultActiveKey={tabKeys.Streams} \r\n    >\r\n      <TabPane tab=\"Streams\" key={tabKeys.Streams} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\r\n        {renderCardGrid(STREAM, loggedIn, favStreams, favoriteOnChange)}\r\n      </TabPane>\r\n      <TabPane tab=\"Videos\" key={tabKeys.Videos} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\r\n        {renderCardGrid(VIDEO, loggedIn, favVideos, favoriteOnChange)}\r\n      </TabPane>\r\n      <TabPane tab=\"Clips\" key={tabKeys.Clips} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\r\n        {renderCardGrid(CLIP, loggedIn, favClips, favoriteOnChange)}\r\n      </TabPane>\r\n    </Tabs>\r\n  );\r\n}\r\n \r\nexport default Home;"]},"metadata":{},"sourceType":"module"}